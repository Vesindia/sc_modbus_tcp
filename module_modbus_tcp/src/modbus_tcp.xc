// Copyright (c) 2011, XMOS Ltd., All rights reserved
// This software is freely distributable under a derivative of the
// University of Illinois/NCSA Open Source License posted in
// LICENSE.txt and at <http://github.xcore.com/>

/*===========================================================================
 Info
 ----

 ===========================================================================*/

/*---------------------------------------------------------------------------
 include files
 ---------------------------------------------------------------------------*/
#include "modbus_tcp.h"
#include <platform.h>
#include "xtcp_client.h"
#include "mbtcp.h"

/*---------------------------------------------------------------------------
 constants
 ---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------
 ports and clocks
 ---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------
 typedefs
 ---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------
 global variables
 ---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------
 static variables
 ---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------
 static prototypes
 ---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------
 Modbus TCP Server
 ---------------------------------------------------------------------------*/
static void modbus_tcp_server(chanend c_tcp_svr, chanend c_modbus)
{
  xtcp_connection_t conn;

  // Initiate the HTTP state
  mbtcp_init(c_tcp_svr);

  while(1)
  {
    select
    {
      // Listen to XTCP events
      case xtcp_event(c_tcp_svr, conn):
      {
        mbtcp_handle_event(c_tcp_svr, c_modbus, conn);
        break;
      }
    }
  }
}

/*---------------------------------------------------------------------------
 Modbus Server
 ---------------------------------------------------------------------------*/
void modbus_server(chanend c_modbus,
                   ethernet_xtcp_ports_t &xtcp_ports,
                   xtcp_ipconfig_t &ipconfig)
{
  chan c_xtcp[1];
  par
  {
    ethernet_xtcp_server(xtcp_ports, ipconfig, c_xtcp, 1);
    modbus_tcp_server(c_xtcp[0], c_modbus);
  }
}

/*==========================================================================*/
